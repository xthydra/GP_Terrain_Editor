material texturedDirectLight
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vert
            fragmentShader = res/shaders/textured.frag
			defines = DIRECTIONAL_LIGHT_COUNT 1;

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
			u_worldViewMatrix = WORLD_VIEW_MATRIX
			u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
			u_ambientColor = SCENE_AMBIENT_COLOR
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                cullFace = true
                depthTest = true
            }
        }
    }
}

material texturedTransparent
{
    technique
    {
        pass
        {
            vertexShader = res/shaders/textured.vert
            fragmentShader = res/shaders/textured.frag
            defines = DIRECTIONAL_LIGHT_COUNT 1; TEXTURE_DISCARD_ALPHA 1

            u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX
			u_worldViewMatrix = WORLD_VIEW_MATRIX
			u_inverseTransposeWorldViewMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
			u_ambientColor = SCENE_AMBIENT_COLOR
            
            sampler u_diffuseTexture
            {
                mipmap = true
                wrapS = CLAMP
                wrapT = CLAMP
                minFilter = LINEAR_MIPMAP_LINEAR
                magFilter = LINEAR
            }

            renderState
            {
                cullFace = true
                depthTest = true
	            blend = true
                blendSrc = SRC_ALPHA
                blendDst = ONE_MINUS_SRC_ALPHA
            }
        }
    }
}

material leaves : texturedTransparent
{
    technique
    {
        pass
        {
            defines = DIRECTIONAL_LIGHT_COUNT 1
            u_matrixPalette = MATRIX_PALETTE
            u_modulateAlpha = 1.0

            sampler u_diffuseTexture
            {
                path = res/leave.png
            }
        }
    }
}

material trunk : texturedDirectLight
{
    technique
    {
        pass
        {
            defines = DIRECTIONAL_LIGHT_COUNT 1
            u_matrixPalette = MATRIX_PALETTE
            u_modulateAlpha = 1.0

            sampler u_diffuseTexture
            {
                path = res/bark.png
            }	
        }
    }
}
